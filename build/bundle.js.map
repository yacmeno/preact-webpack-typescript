{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///../src/vnode.js","webpack:///../src/options.js","webpack:///../src/h.js","webpack:///../src/util.js","webpack:///../src/clone-element.js","webpack:///../src/constants.js","webpack:///../src/render-queue.js","webpack:///../src/vdom/index.js","webpack:///../src/dom/index.js","webpack:///../src/vdom/diff.js","webpack:///../src/vdom/component.js","webpack:///../src/vdom/component-recycler.js","webpack:///../src/component.js","webpack:///../src/render.js","webpack:///../src/preact.js","webpack:///./src/index.tsx","webpack:///./src/components/Hello.tsx"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","VNode","options","stack","EMPTY_CHILDREN","h","nodeName","attributes","children","lastSimple","child","simple","arguments","length","push","pop","undefined","String","vnode","extend","obj","props","applyRef","ref","current","defer","Promise","resolve","then","setTimeout","cloneElement","slice","NO_RENDER","SYNC_RENDER","FORCE_RENDER","ASYNC_RENDER","ATTR_KEY","IS_NON_DIMENSIONAL","items","enqueueRender","component","_dirty","debounceRendering","rerender","renderComponent","isSameNodeType","node","hydrating","splitText","_componentConstructor","isNamedNode","normalizedNodeName","toLowerCase","getNodeProps","defaultProps","removeNode","parentNode","removeChild","setAccessor","old","isSvg","style","cssText","test","innerHTML","__html","useCapture","replace","substring","addEventListener","eventProxy","removeEventListener","_listeners","e","removeAttribute","removeAttributeNS","setAttributeNS","setAttribute","className","this","type","event","mounts","diffLevel","isSvgMode","flushMounts","shift","afterMount","componentDidMount","diff","dom","context","mountAll","parent","componentRoot","ownerSVGElement","ret","idiff","appendChild","out","prevSvgMode","_component","nodeValue","document","createTextNode","replaceChild","recollectNodeTree","vnodeName","originalComponent","oldDom","isDirectOwner","isOwner","_parentComponent","constructor","setComponentProps","base","unmountComponent","createComponent","nextBase","buildComponentFromVNode","createElementNS","createElement","firstChild","fc","vchildren","a","nextSibling","isHydrating","originalChildren","childNodes","keyed","keyedLen","min","len","childrenLen","vlen","j","f","vchild","__key","trim","insertBefore","innerDiffNode","dangerouslySetInnerHTML","attrs","diffAttributes","unmountOnly","removeChildren","lastChild","next","previousSibling","recyclerComponents","Ctor","inst","render","Component","doRender","splice","state","renderMode","_disable","__ref","getDerivedStateFromProps","componentWillMount","componentWillReceiveProps","prevContext","prevProps","syncComponentUpdates","isChild","previousProps","previousState","prevState","previousContext","isUpdate","initialBase","initialChildComponent","skip","snapshot","rendered","cbase","shouldComponentUpdate","componentWillUpdate","getChildContext","getSnapshotBeforeUpdate","childComponent","toUnmount","childProps","baseParent","componentRef","componentDidUpdate","afterUpdate","_renderCallbacks","beforeUnmount","componentWillUnmount","inner","merge","createRef","setState","callback","forceUpdate","Hello","compiler","framework","querySelector"],"mappings":"aACE,IAAIA,EAAmB,GAGvB,SAASC,EAAoBC,GAG5B,GAAGF,EAAiBE,GACnB,OAAOF,EAAiBE,GAAUC,QAGnC,IAAIC,EAASJ,EAAiBE,GAAY,CACzCG,EAAGH,EACHI,GAAG,EACHH,QAAS,IAUV,OANAI,EAAQL,GAAUM,KAAKJ,EAAOD,QAASC,EAAQA,EAAOD,QAASF,GAG/DG,EAAOE,GAAI,EAGJF,EAAOD,QAKfF,EAAoBQ,EAAIF,EAGxBN,EAAoBS,EAAIV,EAGxBC,EAAoBU,EAAI,SAASR,EAASS,EAAMC,GAC3CZ,EAAoBa,EAAEX,EAASS,IAClCG,OAAOC,eAAeb,EAASS,EAAM,CAAEK,YAAY,EAAMC,IAAKL,KAKhEZ,EAAoBkB,EAAI,SAAShB,GACX,oBAAXiB,QAA0BA,OAAOC,aAC1CN,OAAOC,eAAeb,EAASiB,OAAOC,YAAa,CAAEC,MAAO,WAE7DP,OAAOC,eAAeb,EAAS,aAAc,CAAEmB,OAAO,KAQvDrB,EAAoBsB,EAAI,SAASD,EAAOE,GAEvC,GADU,EAAPA,IAAUF,EAAQrB,EAAoBqB,IAC/B,EAAPE,EAAU,OAAOF,EACpB,GAAW,EAAPE,GAA8B,iBAAVF,GAAsBA,GAASA,EAAMG,WAAY,OAAOH,EAChF,IAAII,EAAKX,OAAOY,OAAO,MAGvB,GAFA1B,EAAoBkB,EAAEO,GACtBX,OAAOC,eAAeU,EAAI,UAAW,CAAET,YAAY,EAAMK,MAAOA,IACtD,EAAPE,GAA4B,iBAATF,EAAmB,IAAI,IAAIM,KAAON,EAAOrB,EAAoBU,EAAEe,EAAIE,EAAK,SAASA,GAAO,OAAON,EAAMM,IAAQC,KAAK,KAAMD,IAC9I,OAAOF,GAIRzB,EAAoB6B,EAAI,SAAS1B,GAChC,IAAIS,EAAST,GAAUA,EAAOqB,WAC7B,WAAwB,OAAOrB,EAAgB,SAC/C,WAA8B,OAAOA,GAEtC,OADAH,EAAoBU,EAAEE,EAAQ,IAAKA,GAC5BA,GAIRZ,EAAoBa,EAAI,SAASiB,EAAQC,GAAY,OAAOjB,OAAOkB,UAAUC,eAAe1B,KAAKuB,EAAQC,IAGzG/B,EAAoBkC,EAAI,GAIjBlC,EAAoBA,EAAoBmC,EAAI,G,4CC1E9C,IAAMC,EAAQ,aCWfC,EAAU,GCfVC,EAAQ,GAERC,EAAiB,GAiChB,SAASC,EAAEC,EAAUC,GAC3B,IAAIC,EAASJ,EAAgBK,SAAYC,SAAOC,SAAQ1C,SACxD,IAAKA,EAAE2C,UAAUC,OAAQ5C,KAAM,GAC9BkC,EAAMW,KAAKF,UAAU3C,IAMtB,IAJIsC,GAAmC,MAArBA,EAAWC,WACvBL,EAAMU,QAAQV,EAAMW,KAAKP,EAAWC,iBAClCD,EAAWC,UAEZL,EAAMU,QACZ,IAAKH,EAAQP,EAAMY,aAAsBC,IAAZN,EAAMK,IAClC,IAAK9C,EAAEyC,EAAMG,OAAQ5C,KAAOkC,EAAMW,KAAKJ,EAAMzC,QAG1B,kBAARyC,IAAmBA,EAAQ,OAEjCC,EAA2B,mBAAXL,KACT,MAAPI,EAAaA,EAAQ,GACD,iBAARA,EAAkBA,EAAQO,OAAOP,GACzB,iBAARA,IAAkBC,GAAS,IAGxCA,GAAUF,EACbD,EAASA,EAASK,OAAO,IAAMH,EAEvBF,IAAWJ,EACnBI,EAAW,CAACE,GAGZF,EAASM,KAAKJ,GAGfD,EAAaE,EAIf,IAAIZ,EAAI,IAAIE,EASZ,OARAF,EAAEO,SAAWA,EACbP,EAAES,SAAWA,EACbT,EAAEQ,WAAyB,MAAZA,OAAmBS,EAAYT,EAC9CR,EAAEP,IAAkB,MAAZe,OAAmBS,EAAYT,EAAWf,SAG9BwB,IAAhBd,EAAQgB,OAAmBhB,EAAQgB,MAAMnB,GAEtCA,EC7ED,SAASoB,EAAOC,EAAKC,GAC3B,IAAK,IAAIpD,KAAKoD,EAAOD,EAAInD,GAAKoD,EAAMpD,GACpC,OAAOmD,EAOD,SAASE,EAASC,EAAKrC,GACzBqC,IACa,mBAALA,EAAiBA,EAAIrC,GAC3BqC,EAAIC,QAAUtC,GAUd,IAAMuC,EAAwB,mBAATC,QAAsBA,QAAQC,UAAUC,KAAKnC,KAAKiC,QAAQC,WAAaE,WClB5F,SAASC,EAAaZ,EAAOG,GACnC,OAAOhB,EACNa,EAAMZ,SACNa,EAAOA,EAAO,GAAID,EAAMX,YAAac,GACrCT,UAAUC,OAAO,EAAI,GAAGkB,MAAM3D,KAAKwC,UAAW,GAAKM,EAAMV,UCZpD,IAAMwB,EAAY,EAEZC,EAAc,EAEdC,EAAe,EAEfC,EAAe,EAGfC,EAAW,gBAGXC,EAAqB,yDCP9BC,EAAQ,GAML,SAASC,EAAcC,IACxBA,EAAUC,SAAWD,EAAUC,QAAS,IAAgC,GAAvBH,EAAMxB,KAAK0B,KAC/DtC,EAAQwC,mBAAqBjB,GAAOkB,GAKhC,SAASA,IAEf,IADA,IAAI5C,SACKA,EAAIuC,EAAMvB,OACdhB,EAAE0C,QAAQG,EAAgB7C,GCbzB,SAAS8C,EAAeC,EAAM5B,EAAO6B,GAC3C,MAAmB,iBAAR7B,GAAmC,iBAARA,OACbF,IAAjB8B,EAAKE,UAEe,iBAAjB9B,EAAMZ,UACRwC,EAAKG,uBAAyBC,EAAYJ,EAAM5B,EAAMZ,UAExDyC,GAAaD,EAAKG,wBAAwB/B,EAAMZ,SASjD,SAAS4C,EAAYJ,EAAMxC,GACjC,OAAOwC,EAAKK,qBAAqB7C,GAAYwC,EAAKxC,SAAS8C,gBAAgB9C,EAAS8C,cAW9E,SAASC,EAAanC,GAC5B,IAAIG,EAAQF,EAAO,GAAID,EAAMX,YAC7Bc,EAAMb,SAAWU,EAAMV,SAEvB,IAAI8C,EAAepC,EAAMZ,SAASgD,aAClC,QAAmBtC,IAAfsC,EACH,IAAK,IAAIrF,KAAKqF,OACEtC,IAAXK,EAAMpD,KACToD,EAAMpD,GAAKqF,EAAarF,IAK3B,OAAOoD,ECLD,SAASkC,EAAWT,GAC1B,IAAIU,EAAaV,EAAKU,WAClBA,GAAYA,EAAWC,YAAYX,GAgBjC,SAASY,EAAYZ,EAAMtE,EAAMmF,EAAKzE,EAAO0E,GAInD,GAHW,cAAPpF,IAAoBA,EAAO,SAGpB,QAAPA,QAGC,GAAW,QAAPA,EACR8C,EAASqC,EAAK,MACdrC,EAASpC,EAAO4D,QAEZ,GAAW,UAAPtE,GAAmBoF,EAGvB,GAAW,UAAPpF,GAIR,GAHKU,GAAwB,iBAARA,GAAiC,iBAANyE,IAC/Cb,EAAKe,MAAMC,QAAU5E,GAAS,IAE3BA,GAAwB,iBAARA,EAAkB,CACrC,GAAiB,iBAANyE,EACV,IAAK,IAAI1F,KAAK0F,EAAW1F,KAAKiB,IAAQ4D,EAAKe,MAAM5F,GAAK,IAEvD,IAAK,IAAIA,KAAKiB,EACb4D,EAAKe,MAAM5F,GAAuB,iBAAXiB,EAAMjB,KAA8C,IAA7BoE,EAAmB0B,KAAK9F,GAAciB,EAAMjB,GAAG,KAAQiB,EAAMjB,SAIzG,GAAW,4BAAPO,EACJU,IAAO4D,EAAKkB,UAAY9E,EAAM+E,QAAU,SAExC,GAAa,KAATzF,EAAK,IAAoB,KAATA,EAAK,GAAS,CACtC,IAAI0F,EAAa1F,KAAUA,EAAKA,EAAK2F,QAAQ,WAAY,KACzD3F,EAAOA,EAAK4E,cAAcgB,UAAU,GAChClF,EACEyE,GAAKb,EAAKuB,iBAAiB7F,EAAM8F,EAAYJ,GAGlDpB,EAAKyB,oBAAoB/F,EAAM8F,EAAYJ,IAE3CpB,EAAK0B,aAAe1B,EAAK0B,WAAa,KAAKhG,GAAQU,OAEhD,GAAW,SAAPV,GAAwB,SAAPA,IAAkBoF,GAASpF,KAAQsE,EAAM,CAGlE,IACCA,EAAKtE,GAAe,MAAPU,EAAc,GAAKA,EAC/B,MAAOuF,IACG,MAAPvF,IAAuB,IAARA,GAAwB,cAANV,GAAoBsE,EAAK4B,gBAAgBlG,OAE3E,CACJ,IAAIc,EAAKsE,GAAUpF,KAAUA,EAAOA,EAAK2F,QAAQ,WAAY,KAIlD,MAAPjF,IAAuB,IAARA,EACdI,EAAIwD,EAAK6B,kBAAkB,+BAAgCnG,EAAK4E,eAC/DN,EAAK4B,gBAAgBlG,GAEH,mBAARU,IACXI,EAAIwD,EAAK8B,eAAe,+BAAgCpG,EAAK4E,cAAelE,GAC3E4D,EAAK+B,aAAarG,EAAMU,SAhD9B4D,EAAKgC,UAAY5F,GAAS,GA2D5B,SAASoF,EAAWG,GACnB,OAAOM,KAAKP,WAAWC,EAAEO,MAAM9E,EAAQ+E,OAAS/E,EAAQ+E,MAAMR,IAAMA,GC5H9D,IAAMS,EAAS,GAGXC,EAAY,EAGnBC,GAAY,EAGZrC,GAAY,EAGT,SAASsC,IAEf,IADA,IAAI/G,SACIA,EAAI4G,EAAOI,SACdpF,EAAQqF,YAAYrF,EAAQqF,WAAWjH,GACvCA,EAAEkH,mBAAmBlH,EAAEkH,oBAiBtB,SAASC,EAAKC,EAAKxE,EAAOyE,EAASC,EAAUC,EAAQC,GAEtDX,MAEJC,EAAoB,MAARS,QAAyC7E,IAAzB6E,EAAOE,gBAGnChD,EAAiB,MAAL2C,KAAetD,KAAYsD,IAGxC,IAAIM,EAAMC,EAAMP,EAAKxE,EAAOyE,EAASC,EAAUE,GAY/C,OATID,GAAUG,EAAIxC,aAAaqC,GAAQA,EAAOK,YAAYF,KAGnDb,IACNpC,GAAY,EAEP+C,GAAeT,KAGdW,EAaR,SAASC,EAAMP,EAAKxE,EAAOyE,EAASC,EAAUE,GAC7C,IAAIK,EAAMT,EACTU,EAAchB,EAOf,GAJW,MAAPlE,GAA8B,kBAARA,IAAmBA,EAAQ,IAIlC,iBAARA,GAAmC,iBAARA,EAoBrC,OAjBIwE,QAAuB1E,IAAhB0E,EAAI1C,WAAyB0C,EAAIlC,cAAgBkC,EAAIW,YAAcP,GAEzEJ,EAAIY,WAAWpF,IAClBwE,EAAIY,UAAYpF,IAKjBiF,EAAMI,SAASC,eAAetF,GAC1BwE,IACCA,EAAIlC,YAAYkC,EAAIlC,WAAWiD,aAAaN,EAAKT,GACrDgB,EAAkBhB,GAAK,KAIzBS,EAAI/D,IAAY,EAET+D,EAKR,IDhF0B7F,EAEtBwC,EC8EA6D,EAAYzF,EAAMZ,SACtB,GAAuB,mBAAZqG,EACV,OCwGK,SAAiCjB,EAAKxE,EAAOyE,EAASC,GAO5D,IANA,IAAItH,EAAIoH,GAAOA,EAAIW,WAClBO,EAAoBtI,EACpBuI,EAASnB,EACToB,EAAgBxI,GAAKoH,EAAIzC,wBAAwB/B,EAAMZ,SACvDyG,EAAUD,EACVzF,EAAQgC,EAAanC,GACf5C,IAAMyI,IAAYzI,EAAEA,EAAE0I,mBAC5BD,EAAUzI,EAAE2I,cAAc/F,EAAMZ,SA4BjC,OAzBIhC,GAAKyI,KAAanB,GAAYtH,EAAE+H,aACnCa,EAAkB5I,EAAG+C,EAAOc,EAAcwD,EAASC,GACnDF,EAAMpH,EAAE6I,OAGJP,IAAsBE,IACzBM,EAAiBR,GACjBlB,EAAMmB,EAAS,MAGhBvI,EAAI+I,EAAgBnG,EAAMZ,SAAUe,EAAOsE,GACvCD,IAAQpH,EAAEgJ,WACbhJ,EAAEgJ,SAAW5B,EAEbmB,EAAS,MAEVK,EAAkB5I,EAAG+C,EAAOY,EAAa0D,EAASC,GAClDF,EAAMpH,EAAE6I,KAEJN,GAAUnB,IAAMmB,IACnBA,EAAOR,WAAa,KACpBK,EAAkBG,GAAQ,KAIrBnB,ED5IC6B,CAAwB7B,EAAKxE,EAAOyE,EAASC,GAUrD,GALAR,EAAwB,QAAZuB,GAAuC,kBAAZA,GAAsCvB,EAI7EuB,EAAY1F,OAAO0F,KACdjB,IAAQxC,EAAYwC,EAAKiB,MD5FJrG,EC6FRqG,GD3Fd7D,EC2FyBsC,ED3FVmB,SAASiB,gBAAgB,6BAA8BlH,GAAYiG,SAASkB,cAAcnH,IACxG6C,mBAAqB7C,EC0FzB6F,EDzFMrD,EC2FF4C,GAAK,CAER,KAAOA,EAAIgC,YAAYvB,EAAID,YAAYR,EAAIgC,YAGvChC,EAAIlC,YAAYkC,EAAIlC,WAAWiD,aAAaN,EAAKT,GAGrDgB,EAAkBhB,GAAK,GAKzB,IAAIiC,EAAKxB,EAAIuB,WACZrG,EAAQ8E,EAAI/D,GACZwF,EAAY1G,EAAMV,SAEnB,GAAW,MAAPa,EAAa,CAChBA,EAAQ8E,EAAI/D,GAAY,GACxB,IAAK,IAAIyF,EAAE1B,EAAI5F,WAAYtC,EAAE4J,EAAEhH,OAAQ5C,KAAOoD,EAAMwG,EAAE5J,GAAGO,MAAQqJ,EAAE5J,GAAGiB,MAsBvE,OAlBK6D,GAAa6E,GAAgC,IAAnBA,EAAU/G,QAAoC,iBAAf+G,EAAU,IAAqB,MAAJD,QAA2B3G,IAAf2G,EAAG3E,WAAyC,MAAhB2E,EAAGG,YAC/HH,EAAGrB,WAAWsB,EAAU,KAC3BD,EAAGrB,UAAYsB,EAAU,KAIlBA,GAAaA,EAAU/G,QAAc,MAAJ8G,IA0B3C,SAAuBjC,EAAKkC,EAAWjC,EAASC,EAAUmC,GACzD,IAAIC,EAAmBtC,EAAIuC,WAC1BzH,EAAW,GACX0H,EAAQ,GACRC,EAAW,EACXC,EAAM,EACNC,EAAML,EAAiBnH,OACvByH,EAAc,EACdC,EAAOX,EAAYA,EAAU/G,OAAS,EACtC2H,SAAGlK,SAAGmK,SAAGC,SAAQhI,SAGlB,GAAU,IAAN2H,EACH,IAAK,IAAIpK,EAAE,EAAGA,EAAEoK,EAAKpK,IAAK,CACzB,IAAIyC,EAAQsH,EAAiB/J,GAC5BoD,EAAQX,EAAM0B,GACd5C,EAAM+I,GAAQlH,EAAQX,EAAM2F,WAAa3F,EAAM2F,WAAWsC,MAAQtH,EAAM7B,IAAM,KACtE,MAALA,GACH2I,IACAD,EAAM1I,GAAOkB,IAELW,SAA4BL,IAAlBN,EAAMsC,WAAyB+E,GAAcrH,EAAM4F,UAAUsC,OAAiBb,MAChGvH,EAAS8H,KAAiB5H,GAK7B,GAAW,IAAP6H,EACH,IAAK,IAAItK,EAAE,EAAGA,EAAEsK,EAAMtK,IAAK,CAC1ByK,EAASd,EAAU3J,GACnByC,EAAQ,KAGR,IAAIlB,EAAMkJ,EAAOlJ,IACjB,GAAS,MAALA,EACC2I,QAAyBnH,IAAbkH,EAAM1I,KACrBkB,EAAQwH,EAAM1I,GACd0I,EAAM1I,QAAOwB,EACbmH,UAIG,GAAIC,EAAIE,EACZ,IAAKE,EAAEJ,EAAKI,EAAEF,EAAaE,IAC1B,QAAkBxH,IAAdR,EAASgI,IAAkB3F,EAAevE,EAAIkC,EAASgI,GAAIE,EAAQX,GAAc,CACpFrH,EAAQpC,EACRkC,EAASgI,QAAKxH,EACVwH,IAAIF,EAAY,GAAGA,IACnBE,IAAIJ,GAAKA,IACb,MAMH1H,EAAQuF,EAAMvF,EAAOgI,EAAQ/C,EAASC,GAEtC6C,EAAIT,EAAiB/J,GACjByC,GAASA,IAAQgF,GAAOhF,IAAQ+H,IAC5B,MAAHA,EACH/C,EAAIQ,YAAYxF,GAERA,IAAQ+H,EAAEX,YAClBvE,EAAWkF,GAGX/C,EAAImD,aAAanI,EAAO+H,IAQ5B,GAAIN,EACH,IAAK,IAAIlK,KAAKiK,OAAsBlH,IAAXkH,EAAMjK,IAAgByI,EAAkBwB,EAAMjK,IAAI,GAI5E,KAAOmK,GAAKE,QAC6BtH,KAAnCN,EAAQF,EAAS8H,OAA6B5B,EAAkBhG,GAAO,GAzG5EoI,CAAc3C,EAAKyB,EAAWjC,EAASC,EAAU7C,GAA4C,MAA/B1B,EAAM0H,yBAgKtE,SAAwBrD,EAAKsD,EAAOrF,GACnC,IAAInF,SAGJ,IAAKA,KAAQmF,EACNqF,GAAsB,MAAbA,EAAMxK,IAA2B,MAAXmF,EAAInF,IACxCkF,EAAYgC,EAAKlH,EAAMmF,EAAInF,GAAOmF,EAAInF,QAAQwC,EAAWoE,GAK3D,IAAK5G,KAAQwK,EACD,aAAPxK,GAA4B,cAAPA,GAAyBA,KAAQmF,GAAQqF,EAAMxK,MAAgB,UAAPA,GAAyB,YAAPA,EAAmBkH,EAAIlH,GAAQmF,EAAInF,KACrIkF,EAAYgC,EAAKlH,EAAMmF,EAAInF,GAAOmF,EAAInF,GAAQwK,EAAMxK,GAAO4G,GAxK7D6D,CAAe9C,EAAKjF,EAAMX,WAAYc,GAItC+D,EAAYgB,EAELD,EA2GD,SAASO,EAAkB5D,EAAMoG,GACvC,IAAI1G,EAAYM,EAAKuD,WACjB7D,EAEH4E,EAAiB5E,IAKG,MAAhBM,EAAKV,IAAiBd,EAASwB,EAAKV,GAAUb,IAAK,OAErC,IAAd2H,GAAuC,MAAhBpG,EAAKV,IAC/BmB,EAAWT,GAGZqG,EAAerG,IAUV,SAASqG,EAAerG,GAE9B,IADAA,EAAOA,EAAKsG,UACLtG,GAAM,CACZ,IAAIuG,EAAOvG,EAAKwG,gBAChB5C,EAAkB5D,GAAM,GACxBA,EAAOuG,GE7SF,IAAME,EAAqB,GAW3B,SAASlC,EAAgBmC,EAAMnI,EAAOsE,GAC5C,IAAI8D,SAAMxL,EAAIsL,EAAmB1I,OAajC,IAXI2I,EAAK3J,WAAa2J,EAAK3J,UAAU6J,QACpCD,EAAO,IAAID,EAAKnI,EAAOsE,GACvBgE,EAAUvL,KAAKqL,EAAMpI,EAAOsE,MAG5B8D,EAAO,IAAIE,EAAUtI,EAAOsE,IACvBsB,YAAcuC,EACnBC,EAAKC,OAASE,GAIR3L,KACN,GAAIsL,EAAmBtL,GAAGgJ,cAAcuC,EAGvC,OAFAC,EAAKnC,SAAWiC,EAAmBtL,GAAGqJ,SACtCiC,EAAmBM,OAAO5L,EAAG,GACtBwL,EAIT,OAAOA,EAKR,SAASG,EAASvI,EAAOyI,EAAOnE,GAC/B,OAAOZ,KAAKkC,YAAY5F,EAAOsE,GD7BzB,SAASuB,EAAkB1E,EAAWnB,EAAO0I,EAAYpE,EAASC,GACpEpD,EAAUwH,WACdxH,EAAUwH,UAAW,EAErBxH,EAAUyH,MAAQ5I,EAAME,IACxBiB,EAAUmG,MAAQtH,EAAM7B,WACjB6B,EAAME,WACNF,EAAM7B,SAEiD,IAAnDgD,EAAUyE,YAAYiD,4BAC3B1H,EAAU2E,MAAQvB,EAClBpD,EAAU2H,oBAAoB3H,EAAU2H,qBAEpC3H,EAAU4H,2BAClB5H,EAAU4H,0BAA0B/I,EAAOsE,IAIzCA,GAAWA,IAAUnD,EAAUmD,UAC7BnD,EAAU6H,cAAa7H,EAAU6H,YAAc7H,EAAUmD,SAC9DnD,EAAUmD,QAAUA,GAGhBnD,EAAU8H,YAAW9H,EAAU8H,UAAY9H,EAAUnB,OAC1DmB,EAAUnB,MAAQA,EAElBmB,EAAUwH,UAAW,EAEjBD,IAAa/H,IACZ+H,IAAa9H,IAA8C,IAA/B/B,EAAQqK,sBAAiC/H,EAAU2E,KAIlF5E,EAAcC,GAHdI,EAAgBJ,EAAWP,EAAa2D,IAO1CtE,EAASkB,EAAUyH,MAAOzH,IAcpB,SAASI,EAAgBJ,EAAWuH,EAAYnE,EAAU4E,GAChE,IAAIhI,EAAUwH,SAAd,CAEA,IAAI3I,EAAQmB,EAAUnB,MACrByI,EAAQtH,EAAUsH,MAClBnE,EAAUnD,EAAUmD,QACpB8E,EAAgBjI,EAAU8H,WAAajJ,EACvCqJ,EAAgBlI,EAAUmI,WAAab,EACvCc,EAAkBpI,EAAU6H,aAAe1E,EAC3CkF,EAAWrI,EAAU2E,KACrBG,EAAW9E,EAAU8E,SACrBwD,EAAcD,GAAYvD,EAC1ByD,EAAwBvI,EAAU6D,WAClC2E,GAAO,EACPC,EAAWL,EACXM,SAAUzB,SAAM0B,SA4BjB,GA1BI3I,EAAUyE,YAAYiD,2BACzBJ,EAAQ3I,EAAOA,EAAO,GAAI2I,GAAQtH,EAAUyE,YAAYiD,yBAAyB7I,EAAOyI,IACxFtH,EAAUsH,MAAQA,GAIfe,IACHrI,EAAUnB,MAAQoJ,EAClBjI,EAAUsH,MAAQY,EAClBlI,EAAUmD,QAAUiF,EAChBb,IAAa7H,GACbM,EAAU4I,wBACiD,IAA3D5I,EAAU4I,sBAAsB/J,EAAOyI,EAAOnE,GACjDqF,GAAO,EAECxI,EAAU6I,qBAClB7I,EAAU6I,oBAAoBhK,EAAOyI,EAAOnE,GAE7CnD,EAAUnB,MAAQA,EAClBmB,EAAUsH,MAAQA,EAClBtH,EAAUmD,QAAUA,GAGrBnD,EAAU8H,UAAY9H,EAAUmI,UAAYnI,EAAU6H,YAAc7H,EAAU8E,SAAW,KACzF9E,EAAUC,QAAS,GAEduI,EAAM,CACVE,EAAW1I,EAAUkH,OAAOrI,EAAOyI,EAAOnE,GAGtCnD,EAAU8I,kBACb3F,EAAUxE,EAAOA,EAAO,GAAIwE,GAAUnD,EAAU8I,oBAG7CT,GAAYrI,EAAU+I,0BACzBN,EAAWzI,EAAU+I,wBAAwBd,EAAeC,IAG7D,IAAIc,EAAiBN,GAAYA,EAAS5K,SACzCmL,SAAWtE,SAEZ,GAA4B,mBAAjBqE,EAA6B,CAGvC,IAAIE,EAAarI,EAAa6H,IAC9BzB,EAAOsB,IAEKtB,EAAKxC,cAAcuE,GAAkBE,EAAWlM,KAAKiK,EAAKd,MACrEzB,EAAkBuC,EAAMiC,EAAYzJ,EAAa0D,GAAS,IAG1D8F,EAAYhC,EAEZjH,EAAU6D,WAAaoD,EAAOpC,EAAgBmE,EAAgBE,EAAY/F,GAC1E8D,EAAKnC,SAAWmC,EAAKnC,UAAYA,EACjCmC,EAAKzC,iBAAmBxE,EACxB0E,EAAkBuC,EAAMiC,EAAY1J,EAAW2D,GAAS,GACxD/C,EAAgB6G,EAAMxH,EAAa2D,GAAU,IAG9CuB,EAAOsC,EAAKtC,UAGZgE,EAAQL,GAGRW,EAAYV,KAEXI,EAAQ3I,EAAU6D,WAAa,OAG5ByE,GAAef,IAAa9H,KAC3BkJ,IAAOA,EAAM9E,WAAa,MAC9Bc,EAAO1B,EAAK0F,EAAOD,EAAUvF,EAASC,IAAaiF,EAAUC,GAAeA,EAAYtH,YAAY,IAItG,GAAIsH,GAAe3D,IAAO2D,GAAerB,IAAOsB,EAAuB,CACtE,IAAIY,EAAab,EAAYtH,WACzBmI,GAAcxE,IAAOwE,IACxBA,EAAWlF,aAAaU,EAAM2D,GAEzBW,IACJX,EAAYzE,WAAa,KACzBK,EAAkBoE,GAAa,KAUlC,GALIW,GACHrE,EAAiBqE,GAGlBjJ,EAAU2E,KAAOA,EACbA,IAASqD,EAAS,CAGrB,IAFA,IAAIoB,EAAepJ,EAClBrD,EAAIqD,EACGrD,EAAEA,EAAE6H,mBACV4E,EAAezM,GAAGgI,KAAOA,EAE3BA,EAAKd,WAAauF,EAClBzE,EAAKlE,sBAAwB2I,EAAa3E,aAmB5C,KAfK4D,GAAYjF,EAChBV,EAAOpE,KAAK0B,GAEHwI,IAMLxI,EAAUqJ,oBACbrJ,EAAUqJ,mBAAmBpB,EAAeC,EAAeO,GAExD/K,EAAQ4L,aAAa5L,EAAQ4L,YAAYtJ,IAGvCA,EAAUuJ,iBAAiBlL,QAAQ2B,EAAUuJ,iBAAiBhL,MAAM3C,KAAKoE,GAE3E2C,GAAcqF,GAASnF,KA4DtB,SAAS+B,EAAiB5E,GAC5BtC,EAAQ8L,eAAe9L,EAAQ8L,cAAcxJ,GAEjD,IAAI2E,EAAO3E,EAAU2E,KAErB3E,EAAUwH,UAAW,EAEjBxH,EAAUyJ,sBAAsBzJ,EAAUyJ,uBAE9CzJ,EAAU2E,KAAO,KAGjB,IAAI+E,EAAQ1J,EAAU6D,WAClB6F,EACH9E,EAAiB8E,GAET/E,IACY,MAAhBA,EAAK/E,IAAiBd,EAAS6F,EAAK/E,GAAUb,IAAK,MAEvDiB,EAAU8E,SAAWH,EAErB5D,EAAW4D,GACXoC,EAAmBzI,KAAK0B,GAExB2G,EAAehC,IAGhB7F,EAASkB,EAAUyH,MAAO,MEnRpB,SAASN,EAAUtI,EAAOsE,GAChCZ,KAAKtC,QAAS,EAMdsC,KAAKY,QAAUA,EAMfZ,KAAK1D,MAAQA,EAMb0D,KAAK+E,MAAQ/E,KAAK+E,OAAS,GAE3B/E,KAAKgH,iBAAmB,GCrBlB,SAASrC,EAAOxI,EAAO2E,EAAQsG,GACrC,OAAO1G,EAAK0G,EAAOjL,EAAO,IAAI,EAAO2E,GAAQ,GCb9C,SAASuG,IACR,MAAO,GFoCRjL,EAAOwI,EAAU9J,UAAW,CAU3BwM,SAV2B,SAUlBvC,EAAOwC,GACVvH,KAAK4F,YAAW5F,KAAK4F,UAAY5F,KAAK+E,OAC3C/E,KAAK+E,MAAQ3I,EACZA,EAAO,GAAI4D,KAAK+E,OACC,mBAAVA,EAAuBA,EAAM/E,KAAK+E,MAAO/E,KAAK1D,OAASyI,GAE3DwC,GAAUvH,KAAKgH,iBAAiBjL,KAAKwL,GACzC/J,EAAcwC,OAUfwH,YA3B2B,SA2BfD,GACPA,GAAUvH,KAAKgH,iBAAiBjL,KAAKwL,GACzC1J,EAAgBmC,KAAM7C,IAcvBwH,OA3C2B,eEjC5B,MAAe,CACdrJ,IACAoH,gBACA3F,eACAsK,YACAzC,YACAD,SACA/G,WACAzC,W,yPCnBD,WACA,OAEA,EAAAwJ,OAAO,IAAC,EAAA8C,MAAK,CAACC,SAAS,aAAaC,UAAU,WAAanG,SAASoG,cAAc,W,8ECHlF,WAOa,EAAAH,MAAQ,SAACnL,GAAsB,qB,cAAgBA,EAAMoL,S,QAAepL,EAAMqL,U","file":"bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 1);\n","/**\n * Virtual DOM Node\n * @typedef VNode\n * @property {string | function} nodeName The string of the DOM node to create or Component constructor to render\n * @property {Array<VNode | string>} children The children of node\n * @property {string | number | undefined} key The key used to identify this VNode in a list\n * @property {object} attributes The properties of this VNode\n */\nexport const VNode = function VNode() {};\n","/**\n * @typedef {import('./component').Component} Component\n * @typedef {import('./vnode').VNode} VNode\n */\n\n/**\n * Global options\n * @public\n * @typedef Options\n * @property {boolean} [syncComponentUpdates] If `true`, `prop` changes trigger synchronous component updates. Defaults to true.\n * @property {(vnode: VNode) => void} [vnode] Processes all created VNodes.\n * @property {(component: Component) => void} [afterMount] Hook invoked after a component is mounted.\n * @property {(component: Component) => void} [afterUpdate] Hook invoked after the DOM is updated with a component's latest render.\n * @property {(component: Component) => void} [beforeUnmount] Hook invoked immediately before a component is unmounted.\n * @property {(rerender: function) => void} [debounceRendering] Hook invoked whenever a rerender is requested. Can be used to debounce rerenders.\n * @property {(event: Event) => Event | void} [event] Hook invoked before any Preact event listeners. The return value (if any) replaces the native browser event given to event listeners\n */\n\n/** @type {Options}  */\nconst options = {};\n\nexport default options;\n","import { VNode } from './vnode';\nimport options from './options';\n\n\nconst stack = [];\n\nconst EMPTY_CHILDREN = [];\n\n/**\n * JSX/hyperscript reviver.\n * @see http://jasonformat.com/wtf-is-jsx\n * Benchmarks: https://esbench.com/bench/57ee8f8e330ab09900a1a1a0\n *\n * Note: this is exported as both `h()` and `createElement()` for compatibility\n * reasons.\n *\n * Creates a VNode (virtual DOM element). A tree of VNodes can be used as a\n * lightweight representation of the structure of a DOM tree. This structure can\n * be realized by recursively comparing it against the current _actual_ DOM\n * structure, and applying only the differences.\n *\n * `h()`/`createElement()` accepts an element name, a list of attributes/props,\n * and optionally children to append to the element.\n *\n * @example The following DOM tree\n *\n * `<div id=\"foo\" name=\"bar\">Hello!</div>`\n *\n * can be constructed using this function as:\n *\n * `h('div', { id: 'foo', name : 'bar' }, 'Hello!');`\n *\n * @param {string | function} nodeName An element name. Ex: `div`, `a`, `span`, etc.\n * @param {object | null} attributes Any attributes/props to set on the created element.\n * @param {VNode[]} [rest] Additional arguments are taken to be children to\n *  append. Can be infinitely nested Arrays.\n *\n * @public\n */\nexport function h(nodeName, attributes) {\n\tlet children=EMPTY_CHILDREN, lastSimple, child, simple, i;\n\tfor (i=arguments.length; i-- > 2; ) {\n\t\tstack.push(arguments[i]);\n\t}\n\tif (attributes && attributes.children!=null) {\n\t\tif (!stack.length) stack.push(attributes.children);\n\t\tdelete attributes.children;\n\t}\n\twhile (stack.length) {\n\t\tif ((child = stack.pop()) && child.pop!==undefined) {\n\t\t\tfor (i=child.length; i--; ) stack.push(child[i]);\n\t\t}\n\t\telse {\n\t\t\tif (typeof child==='boolean') child = null;\n\n\t\t\tif ((simple = typeof nodeName!=='function')) {\n\t\t\t\tif (child==null) child = '';\n\t\t\t\telse if (typeof child==='number') child = String(child);\n\t\t\t\telse if (typeof child!=='string') simple = false;\n\t\t\t}\n\n\t\t\tif (simple && lastSimple) {\n\t\t\t\tchildren[children.length-1] += child;\n\t\t\t}\n\t\t\telse if (children===EMPTY_CHILDREN) {\n\t\t\t\tchildren = [child];\n\t\t\t}\n\t\t\telse {\n\t\t\t\tchildren.push(child);\n\t\t\t}\n\n\t\t\tlastSimple = simple;\n\t\t}\n\t}\n\n\tlet p = new VNode();\n\tp.nodeName = nodeName;\n\tp.children = children;\n\tp.attributes = attributes==null ? undefined : attributes;\n\tp.key = attributes==null ? undefined : attributes.key;\n\n\t// if a \"vnode hook\" is defined, pass every created VNode to it\n\tif (options.vnode!==undefined) options.vnode(p);\n\n\treturn p;\n}\n","/**\n * Copy all properties from `props` onto `obj`.\n * @param {object} obj Object onto which properties should be copied.\n * @param {object} props Object from which to copy properties.\n * @returns {object}\n * @private\n */\nexport function extend(obj, props) {\n\tfor (let i in props) obj[i] = props[i];\n\treturn obj;\n}\n\n/** Invoke or update a ref, depending on whether it is a function or object ref.\n *  @param {object|function} [ref=null]\n *  @param {any} [value]\n */\nexport function applyRef(ref, value) {\n\tif (ref) {\n\t\tif (typeof ref=='function') ref(value);\n\t\telse ref.current = value;\n\t}\n}\n\n/**\n * Call a function asynchronously, as soon as possible. Makes\n * use of HTML Promise to schedule the callback if available,\n * otherwise falling back to `setTimeout` (mainly for IE<11).\n * @type {(callback: function) => void}\n */\nexport const defer = typeof Promise=='function' ? Promise.resolve().then.bind(Promise.resolve()) : setTimeout;\n","import { extend } from './util';\nimport { h } from './h';\n\n/**\n * Clones the given VNode, optionally adding attributes/props and replacing its\n * children.\n * @param {import('./vnode').VNode} vnode The virtual DOM element to clone\n * @param {object} props Attributes/props to add when cloning\n * @param {Array<import('./vnode').VNode>} [rest] Any additional arguments will be used as replacement\n *  children.\n */\nexport function cloneElement(vnode, props) {\n\treturn h(\n\t\tvnode.nodeName,\n\t\textend(extend({}, vnode.attributes), props),\n\t\targuments.length>2 ? [].slice.call(arguments, 2) : vnode.children\n\t);\n}\n","// render modes\n\n/** Do not re-render a component */\nexport const NO_RENDER = 0;\n/** Synchronously re-render a component and its children */\nexport const SYNC_RENDER = 1;\n/** Synchronously re-render a component, even if its lifecycle methods attempt to prevent it. */\nexport const FORCE_RENDER = 2;\n/** Queue asynchronous re-render of a component and it's children */\nexport const ASYNC_RENDER = 3;\n\n\nexport const ATTR_KEY = '__preactattr_';\n\n/** DOM properties that should NOT have \"px\" added when numeric */\nexport const IS_NON_DIMENSIONAL = /acit|ex(?:s|g|n|p|$)|rph|ows|mnc|ntw|ine[ch]|zoo|^ord/i;\n\n","import options from './options';\nimport { defer } from './util';\nimport { renderComponent } from './vdom/component';\n\n/**\n * Managed queue of dirty components to be re-rendered\n * @type {Array<import('./component').Component>}\n */\nlet items = [];\n\n/**\n * Enqueue a rerender of a component\n * @param {import('./component').Component} component The component to rerender\n */\nexport function enqueueRender(component) {\n\tif (!component._dirty && (component._dirty = true) && items.push(component)==1) {\n\t\t(options.debounceRendering || defer)(rerender);\n\t}\n}\n\n/** Rerender all enqueued dirty components */\nexport function rerender() {\n\tlet p;\n\twhile ( (p = items.pop()) ) {\n\t\tif (p._dirty) renderComponent(p);\n\t}\n}\n","import { extend } from '../util';\n\n\n/**\n * Check if two nodes are equivalent.\n * @param {import('../dom').PreactElement} node DOM Node to compare\n * @param {import('../vnode').VNode} vnode Virtual DOM node to compare\n * @param {boolean} [hydrating=false] If true, ignores component constructors\n *  when comparing.\n * @private\n */\nexport function isSameNodeType(node, vnode, hydrating) {\n\tif (typeof vnode==='string' || typeof vnode==='number') {\n\t\treturn node.splitText!==undefined;\n\t}\n\tif (typeof vnode.nodeName==='string') {\n\t\treturn !node._componentConstructor && isNamedNode(node, vnode.nodeName);\n\t}\n\treturn hydrating || node._componentConstructor===vnode.nodeName;\n}\n\n\n/**\n * Check if an Element has a given nodeName, case-insensitively.\n * @param {import('../dom').PreactElement} node A DOM Element to inspect the name of.\n * @param {string} nodeName Unnormalized name to compare against.\n */\nexport function isNamedNode(node, nodeName) {\n\treturn node.normalizedNodeName===nodeName || node.nodeName.toLowerCase()===nodeName.toLowerCase();\n}\n\n\n/**\n * Reconstruct Component-style `props` from a VNode.\n * Ensures default/fallback values from `defaultProps`:\n * Own-properties of `defaultProps` not present in `vnode.attributes` are added.\n * @param {import('../vnode').VNode} vnode The VNode to get props for\n * @returns {object} The props to use for this VNode\n */\nexport function getNodeProps(vnode) {\n\tlet props = extend({}, vnode.attributes);\n\tprops.children = vnode.children;\n\n\tlet defaultProps = vnode.nodeName.defaultProps;\n\tif (defaultProps!==undefined) {\n\t\tfor (let i in defaultProps) {\n\t\t\tif (props[i]===undefined) {\n\t\t\t\tprops[i] = defaultProps[i];\n\t\t\t}\n\t\t}\n\t}\n\n\treturn props;\n}\n","import { IS_NON_DIMENSIONAL } from '../constants';\nimport { applyRef } from '../util';\nimport options from '../options';\n\n/**\n * A DOM event listener\n * @typedef {(e: Event) => void} EventListner\n */\n\n/**\n * A mapping of event types to event listeners\n * @typedef {Object.<string, EventListener>} EventListenerMap\n */\n\n/**\n * Properties Preact adds to elements it creates\n * @typedef PreactElementExtensions\n * @property {string} [normalizedNodeName] A normalized node name to use in diffing\n * @property {EventListenerMap} [_listeners] A map of event listeners added by components to this DOM node\n * @property {import('../component').Component} [_component] The component that rendered this DOM node\n * @property {function} [_componentConstructor] The constructor of the component that rendered this DOM node\n */\n\n/**\n * A DOM element that has been extended with Preact properties\n * @typedef {Element & ElementCSSInlineStyle & PreactElementExtensions} PreactElement\n */\n\n/**\n * Create an element with the given nodeName.\n * @param {string} nodeName The DOM node to create\n * @param {boolean} [isSvg=false] If `true`, creates an element within the SVG\n *  namespace.\n * @returns {PreactElement} The created DOM node\n */\nexport function createNode(nodeName, isSvg) {\n\t/** @type {PreactElement} */\n\tlet node = isSvg ? document.createElementNS('http://www.w3.org/2000/svg', nodeName) : document.createElement(nodeName);\n\tnode.normalizedNodeName = nodeName;\n\treturn node;\n}\n\n\n/**\n * Remove a child node from its parent if attached.\n * @param {Node} node The node to remove\n */\nexport function removeNode(node) {\n\tlet parentNode = node.parentNode;\n\tif (parentNode) parentNode.removeChild(node);\n}\n\n\n/**\n * Set a named attribute on the given Node, with special behavior for some names\n * and event handlers. If `value` is `null`, the attribute/handler will be\n * removed.\n * @param {PreactElement} node An element to mutate\n * @param {string} name The name/key to set, such as an event or attribute name\n * @param {*} old The last value that was set for this name/node pair\n * @param {*} value An attribute value, such as a function to be used as an\n *  event handler\n * @param {boolean} isSvg Are we currently diffing inside an svg?\n * @private\n */\nexport function setAccessor(node, name, old, value, isSvg) {\n\tif (name==='className') name = 'class';\n\n\n\tif (name==='key') {\n\t\t// ignore\n\t}\n\telse if (name==='ref') {\n\t\tapplyRef(old, null);\n\t\tapplyRef(value, node);\n\t}\n\telse if (name==='class' && !isSvg) {\n\t\tnode.className = value || '';\n\t}\n\telse if (name==='style') {\n\t\tif (!value || typeof value==='string' || typeof old==='string') {\n\t\t\tnode.style.cssText = value || '';\n\t\t}\n\t\tif (value && typeof value==='object') {\n\t\t\tif (typeof old!=='string') {\n\t\t\t\tfor (let i in old) if (!(i in value)) node.style[i] = '';\n\t\t\t}\n\t\t\tfor (let i in value) {\n\t\t\t\tnode.style[i] = typeof value[i]==='number' && IS_NON_DIMENSIONAL.test(i)===false ? (value[i]+'px') : value[i];\n\t\t\t}\n\t\t}\n\t}\n\telse if (name==='dangerouslySetInnerHTML') {\n\t\tif (value) node.innerHTML = value.__html || '';\n\t}\n\telse if (name[0]=='o' && name[1]=='n') {\n\t\tlet useCapture = name !== (name=name.replace(/Capture$/, ''));\n\t\tname = name.toLowerCase().substring(2);\n\t\tif (value) {\n\t\t\tif (!old) node.addEventListener(name, eventProxy, useCapture);\n\t\t}\n\t\telse {\n\t\t\tnode.removeEventListener(name, eventProxy, useCapture);\n\t\t}\n\t\t(node._listeners || (node._listeners = {}))[name] = value;\n\t}\n\telse if (name!=='list' && name!=='type' && !isSvg && name in node) {\n\t\t// Attempt to set a DOM property to the given value.\n\t\t// IE & FF throw for certain property-value combinations.\n\t\ttry {\n\t\t\tnode[name] = value==null ? '' : value;\n\t\t} catch (e) { }\n\t\tif ((value==null || value===false) && name!='spellcheck') node.removeAttribute(name);\n\t}\n\telse {\n\t\tlet ns = isSvg && (name !== (name = name.replace(/^xlink:?/, '')));\n\t\t// spellcheck is treated differently than all other boolean values and\n\t\t// should not be removed when the value is `false`. See:\n\t\t// https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#attr-spellcheck\n\t\tif (value==null || value===false) {\n\t\t\tif (ns) node.removeAttributeNS('http://www.w3.org/1999/xlink', name.toLowerCase());\n\t\t\telse node.removeAttribute(name);\n\t\t}\n\t\telse if (typeof value!=='function') {\n\t\t\tif (ns) node.setAttributeNS('http://www.w3.org/1999/xlink', name.toLowerCase(), value);\n\t\t\telse node.setAttribute(name, value);\n\t\t}\n\t}\n}\n\n\n/**\n * Proxy an event to hooked event handlers\n * @param {Event} e The event object from the browser\n * @private\n */\nfunction eventProxy(e) {\n\treturn this._listeners[e.type](options.event && options.event(e) || e);\n}\n","import { ATTR_KEY } from '../constants';\nimport { isSameNodeType, isNamedNode } from './index';\nimport { buildComponentFromVNode } from './component';\nimport { createNode, setAccessor } from '../dom/index';\nimport { unmountComponent } from './component';\nimport options from '../options';\nimport { applyRef } from '../util';\nimport { removeNode } from '../dom/index';\n\n/**\n * Queue of components that have been mounted and are awaiting componentDidMount\n * @type {Array<import('../component').Component>}\n */\nexport const mounts = [];\n\n/** Diff recursion count, used to track the end of the diff cycle. */\nexport let diffLevel = 0;\n\n/** Global flag indicating if the diff is currently within an SVG */\nlet isSvgMode = false;\n\n/** Global flag indicating if the diff is performing hydration */\nlet hydrating = false;\n\n/** Invoke queued componentDidMount lifecycle methods */\nexport function flushMounts() {\n\tlet c;\n\twhile ((c = mounts.shift())) {\n\t\tif (options.afterMount) options.afterMount(c);\n\t\tif (c.componentDidMount) c.componentDidMount();\n\t}\n}\n\n\n/**\n * Apply differences in a given vnode (and it's deep children) to a real DOM Node.\n * @param {import('../dom').PreactElement} dom A DOM node to mutate into the shape of a `vnode`\n * @param {import('../vnode').VNode} vnode A VNode (with descendants forming a tree) representing\n *  the desired DOM structure\n * @param {object} context The current context\n * @param {boolean} mountAll Whether or not to immediately mount all components\n * @param {Element} parent ?\n * @param {boolean} componentRoot ?\n * @returns {import('../dom').PreactElement} The created/mutated element\n * @private\n */\nexport function diff(dom, vnode, context, mountAll, parent, componentRoot) {\n\t// diffLevel having been 0 here indicates initial entry into the diff (not a subdiff)\n\tif (!diffLevel++) {\n\t\t// when first starting the diff, check if we're diffing an SVG or within an SVG\n\t\tisSvgMode = parent!=null && parent.ownerSVGElement!==undefined;\n\n\t\t// hydration is indicated by the existing element to be diffed not having a prop cache\n\t\thydrating = dom!=null && !(ATTR_KEY in dom);\n\t}\n\n\tlet ret = idiff(dom, vnode, context, mountAll, componentRoot);\n\n\t// append the element if its a new parent\n\tif (parent && ret.parentNode!==parent) parent.appendChild(ret);\n\n\t// diffLevel being reduced to 0 means we're exiting the diff\n\tif (!--diffLevel) {\n\t\thydrating = false;\n\t\t// invoke queued componentDidMount lifecycle methods\n\t\tif (!componentRoot) flushMounts();\n\t}\n\n\treturn ret;\n}\n\n\n/**\n * Internals of `diff()`, separated to allow bypassing diffLevel / mount flushing.\n * @param {import('../dom').PreactElement} dom A DOM node to mutate into the shape of a `vnode`\n * @param {import('../vnode').VNode} vnode A VNode (with descendants forming a tree) representing the desired DOM structure\n * @param {object} context The current context\n * @param {boolean} mountAll Whether or not to immediately mount all components\n * @param {boolean} [componentRoot] ?\n * @private\n */\nfunction idiff(dom, vnode, context, mountAll, componentRoot) {\n\tlet out = dom,\n\t\tprevSvgMode = isSvgMode;\n\n\t// empty values (null, undefined, booleans) render as empty Text nodes\n\tif (vnode==null || typeof vnode==='boolean') vnode = '';\n\n\n\t// Fast case: Strings & Numbers create/update Text nodes.\n\tif (typeof vnode==='string' || typeof vnode==='number') {\n\n\t\t// update if it's already a Text node:\n\t\tif (dom && dom.splitText!==undefined && dom.parentNode && (!dom._component || componentRoot)) {\n\t\t\t/* istanbul ignore if */ /* Browser quirk that can't be covered: https://github.com/developit/preact/commit/fd4f21f5c45dfd75151bd27b4c217d8003aa5eb9 */\n\t\t\tif (dom.nodeValue!=vnode) {\n\t\t\t\tdom.nodeValue = vnode;\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\t// it wasn't a Text node: replace it with one and recycle the old Element\n\t\t\tout = document.createTextNode(vnode);\n\t\t\tif (dom) {\n\t\t\t\tif (dom.parentNode) dom.parentNode.replaceChild(out, dom);\n\t\t\t\trecollectNodeTree(dom, true);\n\t\t\t}\n\t\t}\n\n\t\tout[ATTR_KEY] = true;\n\n\t\treturn out;\n\t}\n\n\n\t// If the VNode represents a Component, perform a component diff:\n\tlet vnodeName = vnode.nodeName;\n\tif (typeof vnodeName==='function') {\n\t\treturn buildComponentFromVNode(dom, vnode, context, mountAll);\n\t}\n\n\n\t// Tracks entering and exiting SVG namespace when descending through the tree.\n\tisSvgMode = vnodeName==='svg' ? true : vnodeName==='foreignObject' ? false : isSvgMode;\n\n\n\t// If there's no existing element or it's the wrong type, create a new one:\n\tvnodeName = String(vnodeName);\n\tif (!dom || !isNamedNode(dom, vnodeName)) {\n\t\tout = createNode(vnodeName, isSvgMode);\n\n\t\tif (dom) {\n\t\t\t// move children into the replacement node\n\t\t\twhile (dom.firstChild) out.appendChild(dom.firstChild);\n\n\t\t\t// if the previous Element was mounted into the DOM, replace it inline\n\t\t\tif (dom.parentNode) dom.parentNode.replaceChild(out, dom);\n\n\t\t\t// recycle the old element (skips non-Element node types)\n\t\t\trecollectNodeTree(dom, true);\n\t\t}\n\t}\n\n\n\tlet fc = out.firstChild,\n\t\tprops = out[ATTR_KEY],\n\t\tvchildren = vnode.children;\n\n\tif (props==null) {\n\t\tprops = out[ATTR_KEY] = {};\n\t\tfor (let a=out.attributes, i=a.length; i--; ) props[a[i].name] = a[i].value;\n\t}\n\n\t// Optimization: fast-path for elements containing a single TextNode:\n\tif (!hydrating && vchildren && vchildren.length===1 && typeof vchildren[0]==='string' && fc!=null && fc.splitText!==undefined && fc.nextSibling==null) {\n\t\tif (fc.nodeValue!=vchildren[0]) {\n\t\t\tfc.nodeValue = vchildren[0];\n\t\t}\n\t}\n\t// otherwise, if there are existing or new children, diff them:\n\telse if (vchildren && vchildren.length || fc!=null) {\n\t\tinnerDiffNode(out, vchildren, context, mountAll, hydrating || props.dangerouslySetInnerHTML!=null);\n\t}\n\n\n\t// Apply attributes/props from VNode to the DOM Element:\n\tdiffAttributes(out, vnode.attributes, props);\n\n\n\t// restore previous SVG mode: (in case we're exiting an SVG namespace)\n\tisSvgMode = prevSvgMode;\n\n\treturn out;\n}\n\n\n/**\n * Apply child and attribute changes between a VNode and a DOM Node to the DOM.\n * @param {import('../dom').PreactElement} dom Element whose children should be compared & mutated\n * @param {Array<import('../vnode').VNode>} vchildren Array of VNodes to compare to `dom.childNodes`\n * @param {object} context Implicitly descendant context object (from most\n *  recent `getChildContext()`)\n * @param {boolean} mountAll Whether or not to immediately mount all components\n * @param {boolean} isHydrating if `true`, consumes externally created elements\n *  similar to hydration\n */\nfunction innerDiffNode(dom, vchildren, context, mountAll, isHydrating) {\n\tlet originalChildren = dom.childNodes,\n\t\tchildren = [],\n\t\tkeyed = {},\n\t\tkeyedLen = 0,\n\t\tmin = 0,\n\t\tlen = originalChildren.length,\n\t\tchildrenLen = 0,\n\t\tvlen = vchildren ? vchildren.length : 0,\n\t\tj, c, f, vchild, child;\n\n\t// Build up a map of keyed children and an Array of unkeyed children:\n\tif (len!==0) {\n\t\tfor (let i=0; i<len; i++) {\n\t\t\tlet child = originalChildren[i],\n\t\t\t\tprops = child[ATTR_KEY],\n\t\t\t\tkey = vlen && props ? child._component ? child._component.__key : props.key : null;\n\t\t\tif (key!=null) {\n\t\t\t\tkeyedLen++;\n\t\t\t\tkeyed[key] = child;\n\t\t\t}\n\t\t\telse if (props || (child.splitText!==undefined ? (isHydrating ? child.nodeValue.trim() : true) : isHydrating)) {\n\t\t\t\tchildren[childrenLen++] = child;\n\t\t\t}\n\t\t}\n\t}\n\n\tif (vlen!==0) {\n\t\tfor (let i=0; i<vlen; i++) {\n\t\t\tvchild = vchildren[i];\n\t\t\tchild = null;\n\n\t\t\t// attempt to find a node based on key matching\n\t\t\tlet key = vchild.key;\n\t\t\tif (key!=null) {\n\t\t\t\tif (keyedLen && keyed[key]!==undefined) {\n\t\t\t\t\tchild = keyed[key];\n\t\t\t\t\tkeyed[key] = undefined;\n\t\t\t\t\tkeyedLen--;\n\t\t\t\t}\n\t\t\t}\n\t\t\t// attempt to pluck a node of the same type from the existing children\n\t\t\telse if (min<childrenLen) {\n\t\t\t\tfor (j=min; j<childrenLen; j++) {\n\t\t\t\t\tif (children[j]!==undefined && isSameNodeType(c = children[j], vchild, isHydrating)) {\n\t\t\t\t\t\tchild = c;\n\t\t\t\t\t\tchildren[j] = undefined;\n\t\t\t\t\t\tif (j===childrenLen-1) childrenLen--;\n\t\t\t\t\t\tif (j===min) min++;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// morph the matched/found/created DOM child to match vchild (deep)\n\t\t\tchild = idiff(child, vchild, context, mountAll);\n\n\t\t\tf = originalChildren[i];\n\t\t\tif (child && child!==dom && child!==f) {\n\t\t\t\tif (f==null) {\n\t\t\t\t\tdom.appendChild(child);\n\t\t\t\t}\n\t\t\t\telse if (child===f.nextSibling) {\n\t\t\t\t\tremoveNode(f);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tdom.insertBefore(child, f);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\n\t// remove unused keyed children:\n\tif (keyedLen) {\n\t\tfor (let i in keyed) if (keyed[i]!==undefined) recollectNodeTree(keyed[i], false);\n\t}\n\n\t// remove orphaned unkeyed children:\n\twhile (min<=childrenLen) {\n\t\tif ((child = children[childrenLen--])!==undefined) recollectNodeTree(child, false);\n\t}\n}\n\n\n\n/**\n * Recursively recycle (or just unmount) a node and its descendants.\n * @param {import('../dom').PreactElement} node DOM node to start\n *  unmount/removal from\n * @param {boolean} [unmountOnly=false] If `true`, only triggers unmount\n *  lifecycle, skips removal\n */\nexport function recollectNodeTree(node, unmountOnly) {\n\tlet component = node._component;\n\tif (component) {\n\t\t// if node is owned by a Component, unmount that component (ends up recursing back here)\n\t\tunmountComponent(component);\n\t}\n\telse {\n\t\t// If the node's VNode had a ref function, invoke it with null here.\n\t\t// (this is part of the React spec, and smart for unsetting references)\n\t\tif (node[ATTR_KEY]!=null) applyRef(node[ATTR_KEY].ref, null);\n\n\t\tif (unmountOnly===false || node[ATTR_KEY]==null) {\n\t\t\tremoveNode(node);\n\t\t}\n\n\t\tremoveChildren(node);\n\t}\n}\n\n\n/**\n * Recollect/unmount all children.\n *\t- we use .lastChild here because it causes less reflow than .firstChild\n *\t- it's also cheaper than accessing the .childNodes Live NodeList\n */\nexport function removeChildren(node) {\n\tnode = node.lastChild;\n\twhile (node) {\n\t\tlet next = node.previousSibling;\n\t\trecollectNodeTree(node, true);\n\t\tnode = next;\n\t}\n}\n\n\n/**\n * Apply differences in attributes from a VNode to the given DOM Element.\n * @param {import('../dom').PreactElement} dom Element with attributes to diff `attrs` against\n * @param {object} attrs The desired end-state key-value attribute pairs\n * @param {object} old Current/previous attributes (from previous VNode or\n *  element's prop cache)\n */\nfunction diffAttributes(dom, attrs, old) {\n\tlet name;\n\n\t// remove attributes no longer present on the vnode by setting them to undefined\n\tfor (name in old) {\n\t\tif (!(attrs && attrs[name]!=null) && old[name]!=null) {\n\t\t\tsetAccessor(dom, name, old[name], old[name] = undefined, isSvgMode);\n\t\t}\n\t}\n\n\t// add new & update changed attributes\n\tfor (name in attrs) {\n\t\tif (name!=='children' && name!=='innerHTML' && (!(name in old) || attrs[name]!==(name==='value' || name==='checked' ? dom[name] : old[name]))) {\n\t\t\tsetAccessor(dom, name, old[name], old[name] = attrs[name], isSvgMode);\n\t\t}\n\t}\n}\n","import { SYNC_RENDER, NO_RENDER, FORCE_RENDER, ASYNC_RENDER, ATTR_KEY } from '../constants';\nimport options from '../options';\nimport { extend, applyRef } from '../util';\nimport { enqueueRender } from '../render-queue';\nimport { getNodeProps } from './index';\nimport { diff, mounts, diffLevel, flushMounts, recollectNodeTree, removeChildren } from './diff';\nimport { createComponent, recyclerComponents } from './component-recycler';\nimport { removeNode } from '../dom/index';\n\n/**\n * Set a component's `props` and possibly re-render the component\n * @param {import('../component').Component} component The Component to set props on\n * @param {object} props The new props\n * @param {number} renderMode Render options - specifies how to re-render the component\n * @param {object} context The new context\n * @param {boolean} mountAll Whether or not to immediately mount all components\n */\nexport function setComponentProps(component, props, renderMode, context, mountAll) {\n\tif (component._disable) return;\n\tcomponent._disable = true;\n\n\tcomponent.__ref = props.ref;\n\tcomponent.__key = props.key;\n\tdelete props.ref;\n\tdelete props.key;\n\n\tif (typeof component.constructor.getDerivedStateFromProps === 'undefined') {\n\t\tif (!component.base || mountAll) {\n\t\t\tif (component.componentWillMount) component.componentWillMount();\n\t\t}\n\t\telse if (component.componentWillReceiveProps) {\n\t\t\tcomponent.componentWillReceiveProps(props, context);\n\t\t}\n\t}\n\n\tif (context && context!==component.context) {\n\t\tif (!component.prevContext) component.prevContext = component.context;\n\t\tcomponent.context = context;\n\t}\n\n\tif (!component.prevProps) component.prevProps = component.props;\n\tcomponent.props = props;\n\n\tcomponent._disable = false;\n\n\tif (renderMode!==NO_RENDER) {\n\t\tif (renderMode===SYNC_RENDER || options.syncComponentUpdates!==false || !component.base) {\n\t\t\trenderComponent(component, SYNC_RENDER, mountAll);\n\t\t}\n\t\telse {\n\t\t\tenqueueRender(component);\n\t\t}\n\t}\n\n\tapplyRef(component.__ref, component);\n}\n\n\n\n/**\n * Render a Component, triggering necessary lifecycle events and taking\n * High-Order Components into account.\n * @param {import('../component').Component} component The component to render\n * @param {number} [renderMode] render mode, see constants.js for available options.\n * @param {boolean} [mountAll] Whether or not to immediately mount all components\n * @param {boolean} [isChild] ?\n * @private\n */\nexport function renderComponent(component, renderMode, mountAll, isChild) {\n\tif (component._disable) return;\n\n\tlet props = component.props,\n\t\tstate = component.state,\n\t\tcontext = component.context,\n\t\tpreviousProps = component.prevProps || props,\n\t\tpreviousState = component.prevState || state,\n\t\tpreviousContext = component.prevContext || context,\n\t\tisUpdate = component.base,\n\t\tnextBase = component.nextBase,\n\t\tinitialBase = isUpdate || nextBase,\n\t\tinitialChildComponent = component._component,\n\t\tskip = false,\n\t\tsnapshot = previousContext,\n\t\trendered, inst, cbase;\n\n\tif (component.constructor.getDerivedStateFromProps) {\n\t\tstate = extend(extend({}, state), component.constructor.getDerivedStateFromProps(props, state));\n\t\tcomponent.state = state;\n\t}\n\n\t// if updating\n\tif (isUpdate) {\n\t\tcomponent.props = previousProps;\n\t\tcomponent.state = previousState;\n\t\tcomponent.context = previousContext;\n\t\tif (renderMode!==FORCE_RENDER\n\t\t\t&& component.shouldComponentUpdate\n\t\t\t&& component.shouldComponentUpdate(props, state, context) === false) {\n\t\t\tskip = true;\n\t\t}\n\t\telse if (component.componentWillUpdate) {\n\t\t\tcomponent.componentWillUpdate(props, state, context);\n\t\t}\n\t\tcomponent.props = props;\n\t\tcomponent.state = state;\n\t\tcomponent.context = context;\n\t}\n\n\tcomponent.prevProps = component.prevState = component.prevContext = component.nextBase = null;\n\tcomponent._dirty = false;\n\n\tif (!skip) {\n\t\trendered = component.render(props, state, context);\n\n\t\t// context to pass to the child, can be updated via (grand-)parent component\n\t\tif (component.getChildContext) {\n\t\t\tcontext = extend(extend({}, context), component.getChildContext());\n\t\t}\n\n\t\tif (isUpdate && component.getSnapshotBeforeUpdate) {\n\t\t\tsnapshot = component.getSnapshotBeforeUpdate(previousProps, previousState);\n\t\t}\n\n\t\tlet childComponent = rendered && rendered.nodeName,\n\t\t\ttoUnmount, base;\n\n\t\tif (typeof childComponent==='function') {\n\t\t\t// set up high order component link\n\n\t\t\tlet childProps = getNodeProps(rendered);\n\t\t\tinst = initialChildComponent;\n\n\t\t\tif (inst && inst.constructor===childComponent && childProps.key==inst.__key) {\n\t\t\t\tsetComponentProps(inst, childProps, SYNC_RENDER, context, false);\n\t\t\t}\n\t\t\telse {\n\t\t\t\ttoUnmount = inst;\n\n\t\t\t\tcomponent._component = inst = createComponent(childComponent, childProps, context);\n\t\t\t\tinst.nextBase = inst.nextBase || nextBase;\n\t\t\t\tinst._parentComponent = component;\n\t\t\t\tsetComponentProps(inst, childProps, NO_RENDER, context, false);\n\t\t\t\trenderComponent(inst, SYNC_RENDER, mountAll, true);\n\t\t\t}\n\n\t\t\tbase = inst.base;\n\t\t}\n\t\telse {\n\t\t\tcbase = initialBase;\n\n\t\t\t// destroy high order component link\n\t\t\ttoUnmount = initialChildComponent;\n\t\t\tif (toUnmount) {\n\t\t\t\tcbase = component._component = null;\n\t\t\t}\n\n\t\t\tif (initialBase || renderMode===SYNC_RENDER) {\n\t\t\t\tif (cbase) cbase._component = null;\n\t\t\t\tbase = diff(cbase, rendered, context, mountAll || !isUpdate, initialBase && initialBase.parentNode, true);\n\t\t\t}\n\t\t}\n\n\t\tif (initialBase && base!==initialBase && inst!==initialChildComponent) {\n\t\t\tlet baseParent = initialBase.parentNode;\n\t\t\tif (baseParent && base!==baseParent) {\n\t\t\t\tbaseParent.replaceChild(base, initialBase);\n\n\t\t\t\tif (!toUnmount) {\n\t\t\t\t\tinitialBase._component = null;\n\t\t\t\t\trecollectNodeTree(initialBase, false);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (toUnmount) {\n\t\t\tunmountComponent(toUnmount);\n\t\t}\n\n\t\tcomponent.base = base;\n\t\tif (base && !isChild) {\n\t\t\tlet componentRef = component,\n\t\t\t\tt = component;\n\t\t\twhile ((t=t._parentComponent)) {\n\t\t\t\t(componentRef = t).base = base;\n\t\t\t}\n\t\t\tbase._component = componentRef;\n\t\t\tbase._componentConstructor = componentRef.constructor;\n\t\t}\n\t}\n\n\tif (!isUpdate || mountAll) {\n\t\tmounts.push(component);\n\t}\n\telse if (!skip) {\n\t\t// Ensure that pending componentDidMount() hooks of child components\n\t\t// are called before the componentDidUpdate() hook in the parent.\n\t\t// Note: disabled as it causes duplicate hooks, see https://github.com/developit/preact/issues/750\n\t\t// flushMounts();\n\n\t\tif (component.componentDidUpdate) {\n\t\t\tcomponent.componentDidUpdate(previousProps, previousState, snapshot);\n\t\t}\n\t\tif (options.afterUpdate) options.afterUpdate(component);\n\t}\n\n\twhile (component._renderCallbacks.length) component._renderCallbacks.pop().call(component);\n\n\tif (!diffLevel && !isChild) flushMounts();\n}\n\n\n\n/**\n * Apply the Component referenced by a VNode to the DOM.\n * @param {import('../dom').PreactElement} dom The DOM node to mutate\n * @param {import('../vnode').VNode} vnode A Component-referencing VNode\n * @param {object} context The current context\n * @param {boolean} mountAll Whether or not to immediately mount all components\n * @returns {import('../dom').PreactElement} The created/mutated element\n * @private\n */\nexport function buildComponentFromVNode(dom, vnode, context, mountAll) {\n\tlet c = dom && dom._component,\n\t\toriginalComponent = c,\n\t\toldDom = dom,\n\t\tisDirectOwner = c && dom._componentConstructor===vnode.nodeName,\n\t\tisOwner = isDirectOwner,\n\t\tprops = getNodeProps(vnode);\n\twhile (c && !isOwner && (c=c._parentComponent)) {\n\t\tisOwner = c.constructor===vnode.nodeName;\n\t}\n\n\tif (c && isOwner && (!mountAll || c._component)) {\n\t\tsetComponentProps(c, props, ASYNC_RENDER, context, mountAll);\n\t\tdom = c.base;\n\t}\n\telse {\n\t\tif (originalComponent && !isDirectOwner) {\n\t\t\tunmountComponent(originalComponent);\n\t\t\tdom = oldDom = null;\n\t\t}\n\n\t\tc = createComponent(vnode.nodeName, props, context);\n\t\tif (dom && !c.nextBase) {\n\t\t\tc.nextBase = dom;\n\t\t\t// passing dom/oldDom as nextBase will recycle it if unused, so bypass recycling on L229:\n\t\t\toldDom = null;\n\t\t}\n\t\tsetComponentProps(c, props, SYNC_RENDER, context, mountAll);\n\t\tdom = c.base;\n\n\t\tif (oldDom && dom!==oldDom) {\n\t\t\toldDom._component = null;\n\t\t\trecollectNodeTree(oldDom, false);\n\t\t}\n\t}\n\n\treturn dom;\n}\n\n\n\n/**\n * Remove a component from the DOM and recycle it.\n * @param {import('../component').Component} component The Component instance to unmount\n * @private\n */\nexport function unmountComponent(component) {\n\tif (options.beforeUnmount) options.beforeUnmount(component);\n\n\tlet base = component.base;\n\n\tcomponent._disable = true;\n\n\tif (component.componentWillUnmount) component.componentWillUnmount();\n\n\tcomponent.base = null;\n\n\t// recursively tear down & recollect high-order component children:\n\tlet inner = component._component;\n\tif (inner) {\n\t\tunmountComponent(inner);\n\t}\n\telse if (base) {\n\t\tif (base[ATTR_KEY]!=null) applyRef(base[ATTR_KEY].ref, null);\n\n\t\tcomponent.nextBase = base;\n\n\t\tremoveNode(base);\n\t\trecyclerComponents.push(component);\n\n\t\tremoveChildren(base);\n\t}\n\n\tapplyRef(component.__ref, null);\n}\n","import { Component } from '../component';\n\n/**\n * Retains a pool of Components for re-use.\n * @type {Component[]}\n * @private\n */\nexport const recyclerComponents = [];\n\n\n/**\n * Create a component. Normalizes differences between PFC's and classful\n * Components.\n * @param {function} Ctor The constructor of the component to create\n * @param {object} props The initial props of the component\n * @param {object} context The initial context of the component\n * @returns {import('../component').Component}\n */\nexport function createComponent(Ctor, props, context) {\n\tlet inst, i = recyclerComponents.length;\n\n\tif (Ctor.prototype && Ctor.prototype.render) {\n\t\tinst = new Ctor(props, context);\n\t\tComponent.call(inst, props, context);\n\t}\n\telse {\n\t\tinst = new Component(props, context);\n\t\tinst.constructor = Ctor;\n\t\tinst.render = doRender;\n\t}\n\n\n\twhile (i--) {\n\t\tif (recyclerComponents[i].constructor===Ctor) {\n\t\t\tinst.nextBase = recyclerComponents[i].nextBase;\n\t\t\trecyclerComponents.splice(i, 1);\n\t\t\treturn inst;\n\t\t}\n\t}\n\n\treturn inst;\n}\n\n\n/** The `.render()` method for a PFC backing instance. */\nfunction doRender(props, state, context) {\n\treturn this.constructor(props, context);\n}\n","import { FORCE_RENDER } from './constants';\nimport { extend } from './util';\nimport { renderComponent } from './vdom/component';\nimport { enqueueRender } from './render-queue';\n/**\n * Base Component class.\n * Provides `setState()` and `forceUpdate()`, which trigger rendering.\n * @typedef {object} Component\n * @param {object} props The initial component props\n * @param {object} context The initial context from parent components' getChildContext\n * @public\n *\n * @example\n * class MyFoo extends Component {\n *   render(props, state) {\n *     return <div />;\n *   }\n * }\n */\nexport function Component(props, context) {\n\tthis._dirty = true;\n\n\t/**\n\t * @public\n\t * @type {object}\n\t */\n\tthis.context = context;\n\n\t/**\n\t * @public\n\t * @type {object}\n\t */\n\tthis.props = props;\n\n\t/**\n\t * @public\n\t * @type {object}\n\t */\n\tthis.state = this.state || {};\n\n\tthis._renderCallbacks = [];\n}\n\n\nextend(Component.prototype, {\n\n\t/**\n\t * Update component state and schedule a re-render.\n\t * @param {object} state A dict of state properties to be shallowly merged\n\t * \tinto the current state, or a function that will produce such a dict. The\n\t * \tfunction is called with the current state and props.\n\t * @param {() => void} callback A function to be called once component state is\n\t * \tupdated\n\t */\n\tsetState(state, callback) {\n\t\tif (!this.prevState) this.prevState = this.state;\n\t\tthis.state = extend(\n\t\t\textend({}, this.state),\n\t\t\ttypeof state === 'function' ? state(this.state, this.props) : state\n\t\t);\n\t\tif (callback) this._renderCallbacks.push(callback);\n\t\tenqueueRender(this);\n\t},\n\n\n\t/**\n\t * Immediately perform a synchronous re-render of the component.\n\t * @param {() => void} callback A function to be called after component is\n\t * \tre-rendered.\n\t * @private\n\t */\n\tforceUpdate(callback) {\n\t\tif (callback) this._renderCallbacks.push(callback);\n\t\trenderComponent(this, FORCE_RENDER);\n\t},\n\n\n\t/**\n\t * Accepts `props` and `state`, and returns a new Virtual DOM tree to build.\n\t * Virtual DOM is generally constructed via [JSX](http://jasonformat.com/wtf-is-jsx).\n\t * @param {object} props Props (eg: JSX attributes) received from parent\n\t * \telement/component\n\t * @param {object} state The component's current state\n\t * @param {object} context Context object, as returned by the nearest\n\t *  ancestor's `getChildContext()`\n\t * @returns {import('./vnode').VNode | void}\n\t */\n\trender() {}\n\n});\n","import { diff } from './vdom/diff';\n\n/**\n * Render JSX into a `parent` Element.\n * @param {import('./vnode').VNode} vnode A (JSX) VNode to render\n * @param {import('./dom').PreactElement} parent DOM element to render into\n * @param {import('./dom').PreactElement} [merge] Attempt to re-use an existing DOM tree rooted at\n *  `merge`\n * @public\n *\n * @example\n * // render a div into <body>:\n * render(<div id=\"hello\">hello!</div>, document.body);\n *\n * @example\n * // render a \"Thing\" component into #foo:\n * const Thing = ({ name }) => <span>{ name }</span>;\n * render(<Thing name=\"one\" />, document.querySelector('#foo'));\n */\nexport function render(vnode, parent, merge) {\n\treturn diff(merge, vnode, {}, false, parent, false);\n}\n","import { h, h as createElement } from './h';\nimport { cloneElement } from './clone-element';\nimport { Component } from './component';\nimport { render } from './render';\nimport { rerender } from './render-queue';\nimport options from './options';\n\nfunction createRef() {\n\treturn {};\n}\n\nexport default {\n\th,\n\tcreateElement,\n\tcloneElement,\n\tcreateRef,\n\tComponent,\n\trender,\n\trerender,\n\toptions\n};\n\nexport {\n\th,\n\tcreateElement,\n\tcloneElement,\n\tcreateRef,\n\tComponent,\n\trender,\n\trerender,\n\toptions\n};\n","import { h, render } from \"preact\"\nimport { Hello } from \"./components/Hello\"\n\nrender(<Hello compiler=\"TypeScript\" framework=\"Preact\" />, document.querySelector(\"#root\"));","import {h, render} from \"preact\";\n\ninterface HelloProps {\n    compiler: string;\n    framework: string;\n}\n\nexport const Hello = (props: HelloProps) => <h1>Hello from {props.compiler} and {props.framework}!</h1>;\n"],"sourceRoot":""}